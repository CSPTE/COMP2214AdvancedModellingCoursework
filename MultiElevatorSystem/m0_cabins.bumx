machine m0_cabins
sees c0_cabins
variables cabins cabinFloor cabinGoingToUp cabinGoingToDown

invariants
@inv1: cabins ⊆ CABINS
@inv2: cabinFloor ∈ cabins ↣ floor
@inv3: cabinGoingToUp ∈ cabins ⤔ floor
@inv4: cabinGoingToDown ∈ cabins ⤔ floor

events
event INITIALISATION
begin
@act1: cabins ≔ ∅
@act2: cabinFloor ≔ ∅
@act3: cabinGoingToUp ≔ ∅
@act4: cabinGoingToDown ≔ ∅
end

event AddCabin
any c where
@grd1: c ∈ CABINS
@grd2: c ∉ cabins
@grd3: ¬(∃ cab · cab ∈ cabins ∧ cabinFloor(cab) = 1)
@grd4: ¬(∃ cab · cab ∈ cabins ∧ cabinGoingToDown(cab) = 1)
then
@act1: cabins ≔ cabins ∪ {c}
@act2: cabinFloor(c) ≔ 1
end

event RemoveCabin
any c where
@grd1: c ∈ cabins
@grd2: cabinFloor(c) = topFloor
then
@act1: cabins ≔ cabins ∖ {c}
@act2: cabinFloor ≔ {c} ⩤ cabinFloor
@act3: cabinGoingToUp ≔ {c} ⩤ cabinGoingToUp
@act4: cabinGoingToDown ≔ {c} ⩤ cabinGoingToUp
end

event CabinLeavesFloorGoingUp
any c where
@grd1: c ∈ cabins
@grd2: ¬(∃ cab · cab ∈ cabins ∧ cabinFloor(cab) = (cabinFloor(c) + 1))
@grd3: ¬(∃ cab · cab ∈ cabins ∧ cabinGoingToDown(cab) = (cabinFloor(c) + 1))
@grd4: ¬(∃ cab · cab ∈ cabins ∧ cabinGoingToUp(cab) = (cabinFloor(c) + 1))
@grd5: cabinFloor(c) ≠ topFloor 
@grd6: c ∉ dom(cabinGoingToDown)
then
@act1: cabinGoingToUp(c) ≔ cabinFloor(c) + 1
end

event CabinReachesFloorGoingUp
any c where
@grd1: c ∈ cabins
@grd2: c ∈ dom(cabinGoingToUp)
then
@act1: cabinFloor(c) ≔ cabinGoingToUp(c)
@act2: cabinGoingToUp ≔ {c} ⩤ cabinGoingToUp
end

event CabinLeavesFloorGoingDown
any c where
@grd1: c ∈ cabins
@grd2: ¬(∃ cab · cab ∈ cabins ∧ cabinFloor(cab) = (cabinFloor(c) − 1))
@grd3: ¬(∃ cab · cab ∈ cabins ∧ cabinGoingToUp(cab) = (cabinFloor(c) − 1))
@grd4: ¬(∃ cab · cab ∈ cabins ∧ cabinGoingToDown(cab) = (cabinFloor(c) − 1))
@grd5: cabinFloor(c) ≠ 1
@grd6: c ∉ dom(cabinGoingToUp)
then
@act1: cabinGoingToDown(c) ≔ cabinFloor(c) − 1
end

event CabinReachesFloorGoingDown
any c where
@grd1: c ∈ cabins
@grd2: c ∈ dom(cabinGoingToDown)
then
@act1: cabinFloor(c) ≔ cabinGoingToDown(c)
@act2: cabinGoingToDown ≔ {c} ⩤ cabinGoingToDown
end

end